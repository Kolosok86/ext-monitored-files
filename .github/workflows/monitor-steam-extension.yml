name: Monitor Steam Inventory Helper Updates

on:
  schedule:
    # Запускать каждые 6 часов
    - cron: '0 */6 * * *'
  workflow_dispatch: # Позволяет запускать вручную

jobs:
  check-updates:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Download and check for updates
      shell: bash
      run: |
        set -e
        
        echo "Downloading chrome-extension.zip..."
        wget -q https://download.steaminventoryhelper.com/chrome-extension.zip -O chrome-extension.zip
        
        echo "Extracting archive..."
        unzip -q chrome-extension.zip
        
        # Проверяем существование целевого файла
        if [ ! -f "assets/data/cached-key-items.json" ]; then
          echo "Target file assets/data/cached-key-items.json not found in archive"
          exit 1
        fi
        
        # Проверяем есть ли изменения
        if [ -f "cached-key-items.json" ]; then
          if cmp -s "assets/data/cached-key-items.json" "cached-key-items.json"; then
            echo "No changes detected in cached-key-items.json"
            exit 0
          else
            echo "Changes detected in cached-key-items.json"
          fi
        else
          echo "First time monitoring - saving initial version"
        fi
        
        # Копируем новую версию файла
        cp "assets/data/cached-key-items.json" "cached-key-items.json"
        
        # Добавляем метаданные о времени обновления
        echo "Last updated: $(date -u)" > "last-update.txt"
        echo "Source: https://download.steaminventoryhelper.com/chrome-extension.zip" >> "last-update.txt"
        
        # Очищаем временные файлы
        rm -f chrome-extension.zip
        rm -rf assets/
        
        echo "FILE_UPDATED=true" >> $GITHUB_ENV
        
    - name: Commit changes
      if: env.FILE_UPDATED == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add cached-key-items.json last-update.txt
        
        # Создаем коммит с информативным сообщением
        COMMIT_MSG="Update cached-key-items.json - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        git commit -m "$COMMIT_MSG"
        
        # Пушим изменения
        git push
        
        echo "Changes committed and pushed successfully"
        
    - name: Cleanup on failure
      if: failure()
      run: |
        rm -f chrome-extension.zip
        rm -rf assets/ || true
